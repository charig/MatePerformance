<<LanguagesPerformance, echo=FALSE, message=FALSE>>=
steady <- getWarmedupData(
    paste(root_path, "/../Data/areWeFast.data", sep=""), 
    c("Value", "Benchmark", "VM", "Suite", "Iteration"), 
    vmNamesMap(), 
    c("SOMpe", "SOMmt", "Java11", "Pharo", "Node.js"),
    numberOfIterationsPerBenchmark)

vmNames <- list("Node.js"     = "Node", 
                "SOMpe"       = "SOMpe",
                "SOMmt"       = "SOMmt",
                "Pharo"       = "Pharo",
                "Java11"      = "Java")

steady <- change_names(steady, vmNames, "VM")

javaSteady <- steady[steady$VM == "Java",]
summarizedPerBenchAndVM <- summarizedPerBenchmark(steady, c(0,10000), javaSteady, "Java")

#To use later in the warmup plots to draw am horizontal line with the mean overhead factor between mate and som
somSteady <- steady[steady$VM == "SOM",]
steadySOMMATE <- droplevels(subset(steady, VM == "Mate" | VM == "SOM"))
normalizedToSOMPerBenchAndVM <- summarizedPerBenchmark(steadySOMMATE, c(0,10000), somSteady, "SOM")

vm_colors <- brewer.pal(length(vmNames), "Set3")
# to replace scale_fill_brewer(type = "qual", palette = "Paired")

names(vm_colors) <- vmNames

@
\def\LanguagesPerfComparisonPlot{%
<<languages-perf-overview, fig.cap='Overhead factor of Node, both SOM implementations, and Pharo normalized to Java using ~\\citet{Marr:2016:AWFY} benchmarks suite', out.width = "0.7\\textwidth", fig.align="center">>=
boxplotOverview(summarizedPerBenchAndVM, title="Performance Overhead To Java11", yTitle="Overhead Factor", xTitle="Runtime")
@
}%

\def\LanguagesTableSummary{%
<<languages-summary-table>>=
awfTableData <- summarizedPerBenchAndVM[,c(2,1,3,4:8)]
print(
  kable(arrange(awfTableData, Benchmark), 
       booktabs = T,
       format = "latex",
       longtable = T,
       caption = "Baseline Results",
       digits = 2)  %>%
       kable_styling(latex_options = c("repeat_header"), font_size = 7)  %>%
       collapse_rows(columns = 1:2))
@
}

\def\LanguagesTableOverall{%
<<languages-overall-table>>=
awfOverall <- summarizeOverall(awfTableData, ~ VM)
colnames <- c("Runtime", "OF","CI-95%","Sd.", "Min","Max", "Median")
kable(arrange(awfOverall, OF2), 
       booktabs = T,
       format = "latex",
       digits = 2,
       caption = "Overall Baseline Results",
       col.names=colnames
      )  %>%
       kable_styling(latex_options = c("repeat_header"), font_size = 8)
@
}

\def\SomPEMean{
<<languages-summary-sompeMean>>=
cat(round(awfOverall$OF2[awfOverall$VM == "SOMpe"], digits=2))
@
}

\def\SomMTMean{
<<languages-summary-sommtMean>>=
cat(round(awfOverall$OF2[awfOverall$VM == "SOMmt"], digits=2))
@
}

\def\NodeMean{
<<languages-summary-nodeMean>>=
cat(round(awfOverall$OF2[awfOverall$VM == "Node"], digits=2))
@
}

\def\PharoMean{
<<languages-summary-pharoMean>>=
cat(round(awfOverall$OF2[awfOverall$VM == "Pharo"], digits=2))
@
}
